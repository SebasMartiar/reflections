git init:
Inicializa un nuevo repositorio GIT. Hasta que no ingresas este comando dentro de un repositorio es solo una carpeta normal. Solo después de ingresar esto acepta los comandos de GIT.
git commit: 
El comando más importante de GIT. Después de realizar cualquier tipo de cambio, ingresa esto para tomar una “instantánea” del repositorio en ese instante de tiempo. Por lo general, se escribe git commit -m “un mensaje identificativo”. La -m indica que la siguiente sección del comando debe leerse como un mensaje.
git checkout:
Te ayuda a comprobar un repositorio en el cuál no te encuentras actualmente. Es un comando de navegación que te permite moverte al repositorio que quieres revisar. Puedes usar el comando como git checkout master para mirar la rama principal, o git checkout gatos para mirar la rama de los gatos.
git log:
No muestra todos los commits que se han hecho con su información incluyendo la ID de los commits.
Apretar q para salir.
Los cambios más recientes están arriba y los más antiguos abajo.
git log --stat:
Nos da algunas estadísticas de los archivos que se han cambiado en cada commit.
git clone “htttp:...”:
Clona todo el repositorio con todos sus commits desde una URL.
con “scp” secure copy, también se puede copiar un repositorio pero no se copia el historial de cambios.
git diff ID1(antigua) ID2(nueva): 
Compara las líneas de código de dos commits que coinciden con esas ID’s 
git checkout ID: 
Usa la versión de commit con esa ID, de esta manera puedes ver cómo funcionaba el programa cuando se había hecho cada uno de los commits.
